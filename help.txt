Для доступа к данным в заголовки URL запроса необходимо добавить поле Authorization, его значение строится селедующим  образом:
    1) На URL https://parser.uitdep.ru/api/token/ отправляем POST запрос с полями username и password (логин и пароль от панели)
    2) В ответе на запрос из пункта (1) получаем два токена, нам нужен access
    3) Добавляем sruhgiuerfwfpq_elrgekr_dwjlfbwle и к нему через пробел добавляем значение access

Время жизни access токена 24 часа, т.е. периодически нужно будет делать авторизацию описанную в пунктах (1-3)

Загрузка данных:
  POST запрос: https://parser.uitdep.ru/api/v2/input_data/
  в теле POST запроса должны быть данные из примера ниже, данные передаются в виде json (в Postman -> Body это Raw )
  В RESPONSE будут приходить все данные о таске ее id(я называю его номером задания), status, input_data и т.д.

Запуск таски:
  PATCH запрос: https://parser.uitdep.ru/api/v2/start_task/{номер задания}/ 
  В теле PATCH запроса поле "status" со значением "run"
  В RESPONSE будут также приходить все данные о таске, только поле "status" должно быть в состоянии "run" 



//Пример данных
{
  "data": [
    {
      "city": "Казань",
      "stock": "ROW 1",
      "article": "amdfa336",
      "name": "Фильтр воздушный AMD AMDFA336 AMD",
      "brand": "AMD",
      "free_balance": "10",
      "arrival_price": "250",
      "implemented": "5"
    },
    {
      "city": "Казань",
      "stock": "ROW 2",
      "article": "amdfa336",
      "name": "Фильтр воздушный AMD AMDFA336 AMD",
      "brand": "AMD",
      "free_balance": "10",
      "arrival_price": "250",
      "implemented": "5"
    }
    
  ],
    "sites": [
        "emex"       
    ],
    "marker": "3"
}

marker - "1" | "2" | "3"  // 1 - аналитика, 2 - наличие, 3 - техническое
        
sites - Пока у нас работают только 3 сайта, значит можно добавлять следующие названия "emex", "wildberries", "autopiter"


URL для обращения к API и получения данных:
  GET запрос:  https://parser.uitdep.ru/api/v2/get_result/{номер задания из панели}?_start={индекс первого объекта}&_limit={кол-во получаемых строк}

Если не вводить _start, то он по-умолчанию равен 0, т.е. будет с самого первого элемента
Если не вводить _limit, то он по-умолчанию равен 300, т.е. будет парситься 300 элементов
Максимальное возможное значение _limit = 2000, но лучше не перебарщивать, и подобрать оптимальное по скорости и нагрузке значение


При создании задания в теле RESPONSE мы получаем следующие поля:
//Пример RESPONSE
{
    "create": "Task create is success", //ответ об успешном создании таски, если "create" значит успешно, если "error" значит ошибка
    "task": { //Само задания
        "id": 4, // Его ID
        "input_data": [ //Массив входных данных
            {
                "id": 743149,
                "task_id": 4,
                "task_marker": "4-3",
                "start_date": null,
                "city": "Казань",
                "stock": "Центральный склад (УКТТС Казань ООО филиал №1)",
                "site": null,
                "article": "amdfa336",
                "name": "Фильтр воздушный AMD AMDFA336 AMD",
                "brand": "AMD",
                "free_balance": "10",
                "arrival_price": "250",
                "holding_balance": null,
                "holding_expense": null,
                "implemented": "5",
                "finds_list": [] //Сюда в дальнешем будут добавляться найденные товары
            }
        ],
        "sites": [ // Список сайтов
            {
                "id": 1,
                "name": "emex",
                "status": true
            }
        ],
        "create_date": "2023-03-28T12:08:54.602589Z", //Дата создания товара
        "marker": "3", //Маркер товара
        "rows_count": 1, //Кол-во строк в задании
        "status": "ready" //статус работы парсера
    }
}


Размер задания и соответственно кол-во строк для парсера можно высчитать исходя из значения "rows_count"